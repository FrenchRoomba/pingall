name: Pulumi Deploy
on:
  push:
    branches:
      - main
jobs:
  update:
    name: Update
    runs-on: ubuntu-latest
    environment: production
    concurrency: production
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Setup uv
        id: setup-uv
        uses: astral-sh/setup-uv@4959332f0f014c5280e7eac8b70c90cb574c9f9b # v6
        with:
          enable-cache: true
      - name: python deps
        run: uv sync --frozen
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
        with:
          name: frenchroomba
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Nix build
        run: nix build .#gcp.image .#azure.archive .#aws.archive .#aws.adapter-archive .#alicloud.archive
      - uses: "google-github-actions/auth@6fc4af4b145ae7821d527454aa9bd537d1f2dc5f" # v2
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          workload_identity_provider: ${{ secrets.GCP_DEPLOY_WORKLOAD_PROVIDER }}
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}
      - uses: "mozillazg/alibabacloud-oidc-auth@d9e498456f92c4a18a9bce656f9caff1855e1a8a" # v1
        with:
          role-arn-to-assume: ${{ secrets.ALIYUN_DEPLOY_ROLE }}
          oidc-provider-arn: ${{ secrets.ALIYUN_PROVIDER }}
          audience: "github-actions"
          export-environment-variables: true
      - name: gcloud docker auth
        run: gcloud auth configure-docker --quiet $(gcloud artifacts locations list --flatten name --format json | jq -r '[.[] + "-docker.pkg.dev"] | join(",")')
      - uses: pulumi/actions@cc7494be991dba0978f7ffafaf995b0449a0998e # v6.5.0
        with:
          command: up
          stack-name: dev
        env:
          ARM_USE_OIDC: "true"
          ARM_CLIENT_ID: ${{ secrets.AZURE_DEPLOY_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          PULUMI_PYTHON_CMD: "${{ github.workspace }}/.venv/bin/python"
